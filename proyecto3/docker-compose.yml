version: "3.9"

services:
  # ---------------- Databases & Storage ----------------
  postgres:
    image: postgres:16
    environment:
      POSTGRES_USER: mlflow
      POSTGRES_PASSWORD: mlflow
      POSTGRES_DB: mlflow
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  minio:
    image: minio/minio:latest
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: minio123
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data

  # ---------------- Core Services ----------------
  mlflow:
    image: ghcr.io/mlflow/mlflow:v2.12.2
    environment:
      BACKEND_STORE_URI: postgresql+psycopg2://mlflow:mlflow@postgres:5432/mlflow
      ARTIFACT_ROOT: s3://mlops-artifacts/
      MLFLOW_S3_ENDPOINT_URL: http://minio:9000
      AWS_ACCESS_KEY_ID: minio
      AWS_SECRET_ACCESS_KEY: minio123
    depends_on:
      - postgres
      - minio
    command: >
      bash -c "mlflow server \
        --backend-store-uri=$${BACKEND_STORE_URI} \
        --default-artifact-root=$${ARTIFACT_ROOT} \
        --host 0.0.0.0"
    ports:
      - "5000:5000"

  airflow:
    image: apache/airflow:2.9.1
    environment:
      AIRFLOW__CORE__LOAD_EXAMPLES: "false"
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://mlflow:mlflow@postgres:5432/mlflow
      _PIP_ADDITIONAL_REQUIREMENTS: >
        mlflow psycopg2-binary pandas scikit-learn boto3 sqlalchemy requests
    volumes:
      - ./dags:/opt/airflow/dags
      - data_volume:/data
    depends_on: [postgres, mlflow]
    ports:
      - "8080:8080"
    command: >
      bash -c "
        airflow db migrate &&
        airflow users create --username admin --password admin --firstname admin --lastname admin --role Admin --email admin@example.com &&
        airflow webserver & airflow scheduler
      "

  training-worker:
    build: ./training
    environment:
      MLFLOW_TRACKING_URI: http://mlflow:5000
      MLFLOW_S3_ENDPOINT_URL: http://minio:9000
      AWS_ACCESS_KEY_ID: minio
      AWS_SECRET_ACCESS_KEY: minio123
    volumes:
      - data_volume:/data
    depends_on: [mlflow]

  api:
    build: ./api
    environment:
      MLFLOW_TRACKING_URI: http://mlflow:5000
      MLFLOW_S3_ENDPOINT_URL: http://minio:9000
      AWS_ACCESS_KEY_ID: minio
      AWS_SECRET_ACCESS_KEY: minio123
    depends_on: [mlflow]
    ports:
      - "8000:8000"

  streamlit:
    build: ./streamlit_app
    environment:
      API_URL: http://api:8000
    depends_on: [api]
    ports:
      - "8501:8501"

  prometheus:
    image: prom/prometheus:v2.52.0
    volumes:
      - ./infra/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    depends_on: [api]

  grafana:
    image: grafana/grafana:10.4.2
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on: [prometheus]
    ports:
      - "3000:3000"

volumes:
  pgdata:
  minio_data:
  grafana_data:
  data_volume:

